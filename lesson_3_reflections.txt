When would you want to use a remote repository rather than keeping all your work local?

A remote repository is useful for when you are collaboriating with others or working
from multiple machines. This allows changes to be accessible from every machine that has
access to the remote repository, which helps keep the project up to date.


Why might you want to always pull changes manually rather than having Git automatically 
stay up-to-date with your remote repository?

It may be that the local repository is ahead of the remote repository, in which case
automatically pulling is clearly a bad idea. Also, there may be changes made in the
remote repository by someone else that conflict with changes currently being made in
your local repository. Manual pulling prevents all of these kinds of conflicts.


Describe the differences between forks, clones, and branches. When would you use 
one instead of another?

Branches are used to create parallel versions of a project. Clones are used to copy
a project exactly, and forks are the same as clones but they take place within
Github. Branches are used to work on new features, bugfixes, etc. without changing
the master version. Clones and forks are used to gain a copy of the project for
your own use, either for working on the project locally or using it as a basis for
other projects.


What is the benefit of having a copy of the last known state of the remote stored 
locally?

This is useful as it offers a point of comparison between the remote and any changes
that have been made since it was stored, especially in the case that you don't have
internet access. Also, it can be merged on the local machine in the event that a branch
is completed, which may make merging with the actual remote later on more straightforward.